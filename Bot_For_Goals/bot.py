from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler,ContextTypes
from config import TOKEN
from database import init_db, add_goal

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
init_db()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "<b>–ü—Ä–∏–≤–µ—Ç! üéØ –Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ü–µ–ª–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
         "\n"
        "‚ûï <b>/add_goal   -   –î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å </b>\n",
        parse_mode='HTML'
    )

# –ö–æ–º–∞–Ω–¥–∞ /add_goal
async def add_goal_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        description = context.args[0]
        description_1 = context.args[1]
        deadline = context.args[2]
        add_goal(description, deadline)
        await update.message.reply_text(
            f"üéØ <b> –¶–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞! </b>\n"
            f"üîπ<b> **–û–ø–∏—Å–∞–Ω–∏–µ:** </b>{description} {description_1}\n"
            f"üìÖ <b> **–î–µ–¥–ª–∞–π–Ω:**</b> {deadline}\n"
            "<b> –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –µ—ë —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /view_goals.</b>",
            parse_mode='HTML'
        )
    except:
        await update.message.reply_text(
            "üìú <b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ü–µ–ª–∏:</b>\n"
            "\n"
            "‚ûï <b>/add_goal   '–û–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–ª–∏'   'YYYY-MM-DD'</b>\n"
            "\n"
            "<b><i>üí° –ü—Ä–∏–º–µ—Ä:</i></b>\n"
            "       <b>/add_goal    '–ò–∑—É—á–∏—Ç—å Python'    '2024-12-31'</b>",
            parse_mode='HTML'
        )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("add_goal", add_goal_command))


print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
app.run_polling()
